[{"body":"Arduino IDEのインストール Arduino ホームページから「SOFTWARE」→「DOWNLOADS」をクリックし、Arduino IDE インストーラをダウンロードする。下記赤枠はWindowsの例。\n寄付しない場合はJUST DOWNLOADをクリックする。\nボード設定 「ツール」 →「 ボード」から、”Arduino Pro or Pro Mini”と”ATmega328P(3.3V,8MHz)”を選択。\nシリアルポートの選択 「ツール」→「 シリアルポート」から、COM番号を選択\nLeafonyにプログラムを書き込む  Basic Kitを組み立てる  「ファイル」→「スケッチ例」→「01.Basics」→「Blink」 「マイコンボードに書き込む」ボタンを押す  ライブラリのインストール Arduinoのライブラリは、通常以下の2カ所に保存されている。 1）C:\\Program Files (x86)\\Arduino\\libraries 2）C:\\Users\\ユーザ名\\Documents\\Arduino\\libraries\nArduino IDE をインストールした時、1）にライブラリが保存される。（Arduino IDE Standard Libraries） また、GitHubなどからダウンロードしたライブラリ（ZIPファイル）は、「スケッチ」→「ライブラリをインクルード」→「.ZIP形式のライブラリをインストール」を選択することで、 2)に保存される。\n1. Githubからライブラリをダウンロード\n「Clone or download」→「Download ZIP」をクリックする。\n2. ライブラリのインクルード\nArduinoを立ち上げ、スケッチ→ライブラリをインクルード→ZIP形式のライブラリうをインストールの順に選択して保存する。\nトラブルシューティング  USBシリアル変換ボードのデバイスドライバが見つからない場合  USBシリアル変換ドライバーをインストールすることで、AVR MCUへの書き込みが可能。Aruduino UNOと異なるため、要注意。 FTDI VCP Driverサイトからsetup executableをクリックしてインストールファイルをダウンロードし実行する。\n","excerpt":"Arduino IDEのインストール Arduino ホームページから「SOFTWARE」→「DOWNLOADS」をクリックし、Arduino IDE インストーラをダウンロードする。下記赤枠 …","ref":"/docs/environment/basic/","title":"Basic Kit"},{"body":"\r Basic Kit A1.0は、スマートフォンやパソコンに、Bluetoothを使って温度、湿度、照度、傾きセンサの値を送信し、簡単に表示できます。 スマートフォンやパソコンにセンサの値を表示させるには、ソフトウェア（Web Bluetooth）が必要です。 Web Bluetooth は、Android、Mac、WindowsのGoogle Chrome に対応しており、OSによって対応バージョンが異なります。詳細は、Implementation Statusを参照願います。 iPhoneの場合は、アプリ（有償）をダウンロードすれば、使えます。まずは、iPhoneの例の動画をご覧ください。  Android/Mac OS/Windowsの場合  Android 6.0 Marshmallow 以降、OS X Yosemite 以降、Windows 10 version 1703以降 でなければ、動作しません。端末のバージョンを確認してください。 Google Chromeウェブブラウザを立ち上げます。MacやWindowsの端末で、Chromeが無い場合は、インストールしてください。 Windowsの場合、Chromeのアドレスバーにchrome://flags/#enable-experimental-web-platform-features を入力し、enterを押し、Experimental Web Platform featuresでEnableを選択します。Android、Macの端末の場合は不要です。 次に、下記のリンクにアクセスするとアプリが立ち上がります。 https://trillion-node.org/wp/wp-content/SW/sensor-trillion-app/index.html Basic Kitの電池リーフに付属のコイン電池を入れて、電池リーフのスイッチをオンにします。 「Connect」 ボタンを押して「Leaf_A_xxxxx..」を選択後、「ペア設定」ボタンを押します。画面にセンサの値が表示されます。  iPhone/iPadの場合  App StoreからWebBLE (有償)をダウンロードします。 WebBLEを立ち上げ、一番上にあるアドレスバーに以下のURLを貼り付けてください。 https://trillion-node.org/wp/wp-content/SW/sensor-trillion-app/index.html WebBLEの「Connect」 ボタンを押して「Leaf_A_xxxxx..」を選択後、「Done」ボタンを押します。画面にセンサの値が表示されます。 画面上に「Download CSV 」のボタンはありますが、iPhoneでは使用できません。  重要：クイックスタートのプログラム等を詳しく知りたい方へは、Web Bluetoothを使ってセンサの値を表示　を参照してください。\n","excerpt":"Basic Kit A1.0は、スマートフォンやパソコンに、Bluetoothを使って温度、湿度、照度、傾きセンサの値を送信し、簡単に表示できます。 スマートフォンやパソコンにセンサの値を表示させるに …","ref":"/docs/getting-started/basic/","title":"Basic Kit A1.0"},{"body":"Leafony bus の仕様 Leafony busは、複数のリーフが電気信号および電源接続を行う共通経路部。リーフの相互接続を可能にするために、Leafony busは、リーフの20mm x 5.5mm領域の電気的及び、物理的な仕様が定められています。\nピンアウト コネクタ形状  基板の厚さは、t=0.8。パッド部分は、金めっき。レイアウト図のデータは（dxf、、KiCad、EAGLE)は、AX02A 29pin を参照願います。  コネクタの取り付け・取り外し リーフ基板にコネクタを取り付ける、または、外す場合は下図のように行ってください。\n 取り付け   取り外し  コネクタの試験結果 AX61Aコネクタ仕様書を参考\n接続不良時の対処 Connectorや基板の接点に汚れが付着すると、接続不良が生じることがあります。その場合、無水エタノールを含ませた紙製ウエスで払拭してください。それでも改善しない場合は、Connectorを交換してください。\nライセンス  Leafony busのアートワークの著作者は、Leafony Systems 社です。ライセンスは、 表示 4.0 国際(CC BY 4.0) で、提供されています。なお、著作権表示や無保証を参照する表示は、ありません。Leafony bus以外は、Leafony Systems社は、著作権を主張することはありません。 Leafony busのアートワークをコピーして、使用する場合は、「この製品の一部は、Leafony SystemsによるLeafony busのアートワークを利用しています。」と表示をお願いします。  ","excerpt":"Leafony bus の仕様 Leafony busは、複数のリーフが電気信号および電源接続を行う共通経路部。リーフの相互接続を可能にするために、Leafony busは、リーフの20mm x …","ref":"/docs/leaf/leafonybus/","title":"Leafony bus"},{"body":"概要 AVR MCUリーフに搭載されたLEDを1秒ごとに点灯、消灯を繰り返します。\n使用するリーフ 以下のリーフを使用します\n   Type Name Q\u0026rsquo;ty     AP01A AVR MCU 1   AZ01A USB 1   AV01A CR2032 1   AZ62A コネクタカバー 1    CR2032 コイン電池 1    M2ネジ 2    リーフの組み立て 下図のようにリーフを組み立てましょう。\nソースコード Arduino IDEで下記のプログラムを書きましょう。\nvoid setup() {\r// LEDピンを出力ピンに設定\r pinMode(LED_BUILTIN, OUTPUT);\r}\rvoid loop() {\rdigitalWrite(LED_BUILTIN, HIGH); // LEDを点灯\r delay(1000); // 1秒待つ\r digitalWrite(LED_BUILTIN, LOW); // LEDを消灯\r delay(1000); // 1秒待つ\r}\r","excerpt":"概要 AVR MCUリーフに搭載されたLEDを1秒ごとに点灯、消灯を繰り返します。\n使用するリーフ 以下のリーフを使用します\n   Type Name Q\u0026rsquo;ty     AP01A AVR …","ref":"/docs/examples/blink/","title":"LED点滅"},{"body":"Leafontとは (What is it?) トリリオンノード・エンジンには以下のような特徴があり、製品名はLeafony（リーフォニー）です。LeafonyはIoT/CPSシステムやアプリ、サービスの研究開発効率を断然アップさせます。ビデオも同時にご覧ください。\n  超小型で組立簡単: 1円玉大の電子基板モジュール（リーフ）ですが、新規研究開発されたコネクタによって、組立はブロック玩具のように簡単。\n  超低消費電力: 低消費電力性に優れています。すべてのリーフにはスタンバイモードやソフトウェアで制御できる電源スイッチ装備されていて、コイン電池でも動作します。\n  オープンソース・ハード／ソフト: 商用でも無償でフリーに使える仕様・回路図・パターン図などのハードウェア情報が公開されています。ソフトウェアもすでに数万本あるフリーのArduinoソフトウェアが使えます。その他のソフトウェアでも使えます。\n  リーフの製作が簡単: リーフを作るときには、特殊な技術やコネクタは不要。Leafonyコネクタを後で手で付けられるなど、あなた自身の独自リーフも短工期で簡単に作れ、研究開発効率が断然アップします。\n  \r詳細はこちらの資料をご覧ください。\n利用シーン (Usecase)  企業  IoTのProof of Concept (PoC) R\u0026amp;D、実証実験、社会課題を解く IoTシステム試作サービス レファレンスモデルの作製 自社部品／技術の販売ツール 技術の再利用や伝承   個人  新しいアプリ サービスの探査 手軽なガジェット創り   教育・大学  IoT教育 研究／実験 研究成果をデモし実用化加速    はじめてみよう (Where should I go next?) Leafonyをはじめよう\n クイックスタート サンプルデザイン  ","excerpt":"Leafontとは (What is it?) トリリオンノード・エンジンには以下のような特徴があり、製品名はLeafony（リーフォニー）です。LeafonyはIoT/CPSシステムやアプリ、サービ …","ref":"/docs/overview/","title":"はじめに"},{"body":"Arduino IDEのインストール Arduino ホームページから「SOFTWARE」→「DOWNLOADS」をクリックし、Arduino IDE インストーラをダウンロードする。下記赤枠はWindowsの例。\n寄付しない場合はJUST DOWNLOADをクリックする。\nボード設定 ESP32 MCUをArduino IDEで使用するには、Arduino core for the ESP32 のインストールが必要です。\n Arduino IDEのファイル→環境設定を開き、”追加のボードマネージャのURL:”に、下記URLを入力してください。 https://dl.espressif.com/dl/package_esp32_index.json  ツール→ボード→ボードマネージャを選択し、”全て”の右側に”esp32″と入力し、esp32 by Espressifl Systemsが表示されるので”インストール”のボタンを押します。  ツール→ボード→ESP32 Dev Moduleを選択すれば、ESP32 MCUが使えるようになります。  サンプルデザインで動作確認  「ファイル」→「スケッチ例」→「01.Basics」→「Blink」 「マイコンボードに書き込む」ボタンを押す  ライブラリのインストール Arduinoのライブラリは、通常以下の2カ所に保存されている。 1）C:\\Program Files (x86)\\Arduino\\libraries 2）C:\\Users\\ユーザ名\\Documents\\Arduino\\libraries\nArduino IDE をインストールした時、1）にライブラリが保存される。（Arduino IDE Standard Libraries） また、GitHubなどからダウンロードしたライブラリ（ZIPファイル）は、「スケッチ」→「ライブラリをインクルード」→「.ZIP形式のライブラリをインストール」を選択することで、 2)に保存される。\n1. Githubからライブラリをダウンロード\n「Clone or download」→「Download ZIP」をクリックする。\n2. ライブラリのインクルード\nArduinoを立ち上げ、スケッチ→ライブラリをインクルード→ZIP形式のライブラリうをインストールの順に選択して保存する。\n","excerpt":"Arduino IDEのインストール Arduino ホームページから「SOFTWARE」→「DOWNLOADS」をクリックし、Arduino IDE インストーラをダウンロードする。下記赤枠 …","ref":"/docs/environment/esp32/","title":"ESP32 Wi-Fi Kit"},{"body":"","excerpt":"","ref":"/docs/getting-started/esp32/","title":"ESP32 Wi-Fi Kit A1.0"},{"body":"","excerpt":"","ref":"/docs/getting-started/","title":"クイックスタート"},{"body":"Leafony（リーフォニー）または、Leafony platform（リーフォニー・プラットフォーム） 超小型、電池で動く、組み立て簡単なオープンイノベーション・プラットフォームです。特に、新しいITサービスやガジェット、マシンあるいはIoTのエッジノードなどを生み出すための試みが簡単になるエレクトロニクスおよびソフトウェアのプラットフォームとなっています。このようなプラットフォーム構築を目指して、トリリオンノード・エンジン・プロジェクト１）がその研究開発を進めています。このプロジェクトで研究開発が終了し、仕様などが確定したものをLeafonyと呼びます。LeafonyはLeafとSymphonyの造語ですが、個と全体の調和を目指した造語です。Symphonyでは、さまざまな楽器の出す音色が調和して素晴らしい楽曲を奏でるようにLeafが集まって素晴らしい価値を創造して欲しいという願いが込められています。「Leafony」は登録商標です。\nLeafonyは、現在Arduino Pro or Pro Mini (3.3V/8MHz) のソフトウェア環境で動作するようになっていますが、プロセッサリーフを変更することにより、どのようなプロセッサ環境／ソフトウェア環境でも使用できるようになっています。新規開発ソフトウェアは、MITライセンスで公開していますので、商用でも自由に無償で使用できます。\nトリリオンノード・エンジンプロジェクトでは、今後、Leafonyがより強力なプロセッサ環境にも対応できるように、また将来、AIなどの開発プラットフォームとしても使えることを目指して、引き続き各種の拡張を研究開発しています。\nLeaf（リーフ） Leafonyの基礎となる2cm角程度の電子基板／電子モジュールのことです。小さくて緑色なのでリーフ（木の葉）と呼んでいます。\nLeafony block（リーフォニー・ブロック）作成中 複数のリーフを組合わせて出来上がった電子機器のことです。Leafony blockは、単体で使用する場合や、機器の中に組み込まれる場合があります。\nLeafony bus（リーフォニー・バス） 複数のリーフ間を相互に接続する共通経路部をLeafonyバスと呼びます。電気信号および電源接続を行うための電気的および物理的な仕様が定義されています。典型的にはリーフの20mm x 5.5mmの領域となります。Leafonyバス準拠のリーフは他のリーフと交信可能になりますが、Leafonyプラットフォームと完全に問題なく繋がるかはソフトウェアなどにもよるため、Leafonyバス準拠というのはあくまでも物理レベルに近いところで接続可能といっているに過ぎません。\nLeafonyバスのアートワークには著作権があり、CC-BYライセンスで公開していますので、商用でもLeafony準拠と明記すれば自由に無償で使用できます。従って、自由に独自のリーフを開発や販売ができます。ただし、Leafonyは登録商標ですので、独自に作ったリーフそのものにはLeafonyとは表示しないでください。Leafonyと表示のあるリーフは製品品質が確かめられていることがわかり、混乱を避けられます。\nLEAFONY SYSTEMS Co.,Ltd.（リーフォニー・システムズ 株式会社） トリリオンノード・エンジン・プロジェクトが研究開発したLeafonyを製造、販売する唯一の会社です。LeafにLeafonyを表示しているのはLEAFONY SYSTEMS社のLeafだけです。Leafonyと表示されたLeafは、相互接続などがトリリオンノード・エンジン・プロジェクトによって確認されています。\nLeafonyバス準拠のリーフ、他の企業や個人などから多数販売されますし、そのような活動を推奨していますが、リーフ自体にLeafonyの表示はされません。\nトリリオンノード研究会 IoT/CPS２）など将来非常に多くのITノードが社会で使われるようになると言われています。そのような未来を議論し情報を共有するための研究会です。具体的に考えるベースとして、Leafonyを使っており、IoT/CPSの発展のため、Leafonyの普及に力を入れています。また、ニーズとシーズを持った関連企業をつなぐ場も提供しています。\n １）トリリオンノード・エンジン・プロジェクトは、国立研究開発法人新エネルギー・産業技術総合開発機構（ＮＥＤＯ）の委託・助成事業による研究開発プロジェクトです。\n２）IoTはInternet of Things、CPSはCyber-Physical Systemsの略です。特に、CPSはネットにつながらずとも、リアルな物理的空間とデジタル空間をつなぐような システムです。\n","excerpt":"Leafony（リーフォニー）または、Leafony platform（リーフォニー・プラットフォーム） 超小型、電池で動く、組み立て簡単なオープンイノベーション・プラットフォームです。特に、新し …","ref":"/docs/overview/terms/","title":"用語の説明"},{"body":"","excerpt":"","ref":"/docs/environment/","title":"開発環境設定"},{"body":"Basic Kit Basic Kitのみで遊べるサンプルです。\n LED点滅 LED Blink バッテリ電圧読み取り Read Battery Voltage 温湿度センサ読み取り Temperature and Humidity Sensors 照度センサ読み取り Illuminance Sensor 加速度センサ読み取り Accelerometer Web Bluetoothを使ったIoTアプリ入門 Web Bluetooth Commnication Google sheetsを使ったIoTサービス入門  Extension Kit Extension Kitと組み合わせて遊べるサンプルです。\n スピーカ 人感センサ サウンドレベルメータ Sound Level Meter LCD ディスプレイ リアルタイムクロック microSDカード  ESP32 Wi-Fi ESP32 Wi-Fi Kitで遊べるサンプル\n タッチセンサ  Grove Extention KitのGroveリーフとGroveモジュールで遊べるサンプル\n 超音波センサで距離測定 カメラの撮影  サンプルコードGithubリポジトリ  https://github.com/Leafony/Sample-Sketches  ","excerpt":"Basic Kit Basic Kitのみで遊べるサンプルです。\n LED点滅 LED Blink バッテリ電圧読み取り Read Battery Voltage …","ref":"/docs/examples/","title":"サンプルデザイン"},{"body":"   特徴 温湿度センサ、照度センサ、加速度センサを搭載したリーフです。MCUリーフとはI2Cで接続されます。\n性能    項目 内容     温湿度センサ    温度計測範囲 -40～120℃   Temperature accuracy ±0.5°C (15 to +40°C)   Relative humidity range 0 to 100%   Humidity accuracy 3.5% rH (20 to +80% rH)   Interfaces I2C       照度センサ    Measurement range 0.01 lux to 83 k lux   IR Rejects \u0026gt; 99% (typ)   Interfaces I2C       加速度センサ    Measurement range ±2g/±4g/±8g/±16g (selectable)   Function 6D/4D orientation detection   Freefall detection    Motion detection    Interfaces I2C    ドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ピン配置 サンプルプロジェクト  LED点滅  ","excerpt":"特徴 温湿度センサ、照度センサ、加速度センサを搭載したリーフです。MCUリーフとはI2Cで接続されます。\n性能    項目 内容     温湿度センサ    温度計測範囲 -40～120℃ …","ref":"/docs/leaf/ai01a/","title":"AI01A 4-Sensors"},{"body":"   特徴 ATmega328Pを使用したリーフ。14個のデジタル入出力ピン（6個はPWM出力として使用可能）、6個のアナログ入力ピン、8MHz振動子、およびリセットボタンを備えています。 USB接続する場合はUSB を接続、ICSPを使用する場合はShield を接続します。 Arduino IDE使用時は、ボードをArduino Pro or Pro　Mini、プロセッサをATmega328P(3.3V,8MHz)選択。\n性能    項目 内容     MCU ATmega328P   動作電圧 3.3V   動作電圧範囲 1.5-5V   Digital I/O 14   Analog Input 6   Flash Memory 32 KB   SRAM 2KB   EEPROM 1KB   動作周波数 8MHz    ドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf ブートローダ  Rev.A  ピン配置 サンプルプロジェクト  LED点滅  ","excerpt":"特徴 ATmega328Pを使用したリーフ。14個のデジタル入出力ピン（6個はPWM出力として使用可能）、6個のアナログ入力ピン、8MHz振動子、およびリセットボタンを備えています。 USB接続する場 …","ref":"/docs/leaf/ap01a/","title":"AP01A AVR MCU"},{"body":"   特徴 EASELの技的認証済みLoRaモジュールES920LRA1を搭載したリーフです。MCUリーフとはUARTで接続されます。\n性能    項目 内容     SoC MKL16Z128 (ARM Cortex-M0+)   RF Transceiver SX1276 (SEMTECH)   Frequency range 920.6～928.0MHz   伝送速度 146bps～22kbps   RX sensitivity -118～-142dBm   TX power 13dBm（20mW)以下   RF certification TELEC   通信距離目安(ワイヤーアンテナ) 見通し 5km   Flash 128KB   RAM 32KB   Interfaces UART    ドキュメント  仕様書  日本語 / \u0026lt;a href=\u0026gt; English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ピン配置 サンプルプロジェクト  LED点滅  ","excerpt":"特徴 EASELの技的認証済みLoRaモジュールES920LRA1を搭載したリーフです。MCUリーフとはUARTで接続されます。\n性能    項目 内容     SoC MKL16Z128 (ARM …","ref":"/docs/leaf/ac03a/","title":"AC03A LoRa Easy"},{"body":"   特徴 圧電スピーカと人感センサを搭載したリーフです。圧電スピーカはPWM、人感センサはI2CでMCUリーフと接続されます。人感センサは接近検知アルゴリズムを内蔵しており、簡単な設定で接近を検知することが出来、接近検知時に割り込み信号を出力することが可能です。\n性能    項目 内容     圧電スピーカ    dimensions 12 x 12 x 3mm   rated frequency 4kHz(typ)   sound pressure level 81dB(min) at 10 cm, 5 Vp-p, 4,000 Hz square wave   Current consumption 5mA(max) at 5 Vp-p, 4,000 Hz square wave       人感センサ    Sensor Quantum-type IR Sensor   Integrated Digital Filters Cut-off Frequency 0.9Hz,0.445Hz *Only with 10Hz of Data Output Rate(ODR)   Interfaces I2C    ドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf ブートローダ  Rev.A  ピン配置 サンプルプロジェクト  LED点滅  ","excerpt":"特徴 圧電スピーカと人感センサを搭載したリーフです。圧電スピーカはPWM、人感センサはI2CでMCUリーフと接続されます。人感センサは接近検知アルゴリズムを内蔵しており、簡単な設定で接近を検知すること …","ref":"/docs/leaf/ai02a/","title":"AI02A SP\u0026PIR"},{"body":"概要 CR2032コイン電池リーフに搭載されたADコンバータを使って電池の電圧を読み取りましょう。 このサンプルはAV03A AA BATリーフや、AV04A 2V～4.5Vリーフなどの電池リーフでも動作します。\n使用するリーフ 以下のリーフを使用します\n   Type Name Q\u0026rsquo;ty     AP01A AVR MCU 1   AZ01A USB 1   AV01A CR2032 1   AZ62A コネクタカバー 1    CR2032 コイン電池 1    M2ネジ 2    リーフの組み立て ソースコード Arduino IDEで下記のプログラムを書きましょう。\n#include \u0026lt;Wire.h\u0026gt;\r#include \u0026lt;SoftwareSerial.h\u0026gt;\r\r#define SDA 18\r#define SCL 19\r\r#define BATT_ADC_ADDR 0x50\r\rfloat dataBatt = 0;\rvoid setup() {\rSerial.begin(115200);\rWire.begin(); // I2C 100kHz\r\rdelay(10);\r}\rvoid loop(){\rdouble temp_mv;\ruint8_t adcVal1 = 0;\ruint8_t adcVal2 = 0;\rWire.beginTransmission(BATT_ADC_ADDR);\rWire.write(0x00);\rWire.endTransmission(false);\rWire.requestFrom(BATT_ADC_ADDR,2);\radcVal1 = Wire.read();\radcVal2 = Wire.read();\rif (adcVal1 == 0xff \u0026amp;\u0026amp; adcVal2 == 0xff) {\r//測定値がFFならバッテリリーフはつながっていない\r adcVal1 = adcVal2 = 0;\r}\r//電圧計算　ADC　* （(リファレンス電圧(3.3V)/ ADCの分解能(256)) * 分圧比（２倍））\r temp_mv = ((double)((adcVal1 \u0026lt;\u0026lt; 4) | (adcVal2 \u0026gt;\u0026gt; 4)) * 3300 * 2) / 256;\rdataBatt = (float)(temp_mv / 1000);\rSerial.println(\u0026#34;\u0026#34;);\rSerial.println(\u0026#34; Batt[V] = \u0026#34; + String(dataBatt));\rdelay(1000); // wait for a second\r}\r//-----------------------------------------------\r//I2C スレーブデバイスに1バイト書き込む\r//-----------------------------------------------\rvoid i2c_write_byte(int device_address, int reg_address, int write_data){\rWire.beginTransmission(device_address);\rWire.write(reg_address);\rWire.write(write_data);\rWire.endTransmission();\r}\r//-----------------------------------------------\r//I2C スレーブデバイスから1バイト読み込む\r//-----------------------------------------------\runsigned char i2c_read_byte(int device_address, int reg_address){\rint read_data = 0;\rWire.beginTransmission(device_address);\rWire.write(reg_address);\rWire.endTransmission(false);\rWire.requestFrom(device_address, 1);\rread_data = Wire.read();\rreturn read_data;\r}\r//---------------------------------------\r// trim\r// 文字列配列からSPを削除する\r//---------------------------------------\rvoid trim(char * data)\r{\rint i = 0, j = 0;\rwhile (*(data + i) != \u0026#39;\\0\u0026#39;){\rif (*(data + i) != \u0026#39; \u0026#39;){\r*(data + j) = *(data + i);\rj++;\r}\ri++;\r}\r*(data + j) = \u0026#39;\\0\u0026#39;;\r}\r動作 Arduino IDEのシリアルモニタを開き、ボーレートを115200bpsすると、電池の電圧が表示されます。\n","excerpt":"概要 CR2032コイン電池リーフに搭載されたADコンバータを使って電池の電圧を読み取りましょう。 このサンプルはAV03A AA BATリーフや、AV04A 2V～4.5Vリーフなどの電池リーフでも …","ref":"/docs/examples/read_battery/","title":"バッテリ残量"},{"body":"   特徴 Espressif SystemsのXtensa Dual-Core 32-bit LX6 マイクロプロセッサ、技的認証済みWi-FiとBLEを内蔵したESP32-WROOM-32を搭載した32bit MCUリーフである。無線の認証は、 FCC、CE-RED、IC、TELEC、KCC、SRRC、NCCを取得（Espressif Systems Data Sheet V2.9）。 USB電源を供給して、VBUS(5V)電源として使用可能。\n性能    項目 内容     SoC ESP32-D0WDQ6 (CPU:Xtensa LX6)   動作電圧 3.3V   動作電圧範囲 2.2-3.6V   Digital I/O 14   Analog Input 6   TouchSensor I/F 6   Flash Memory 4 MB   SRAM 520 KB   動作周波数 80M-240MHz   Wi-Fi protocols IEEE 802.11b/g/n   Bluetooth Protocols Bluetooth v4.2 BR/EDR and BLE specification   RF certification FCC/CE-RED/IC/TELEC/KCC/SRRC/NCC    ドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ピン配置 サンプルプロジェクト  Wi-Fi を使ってタッチセンサの値を表示※リンク先 要変更  ソフトウェア仕様 ","excerpt":"特徴 Espressif SystemsのXtensa Dual-Core 32-bit LX6 マイクロプロセッサ、技的認証済みWi-FiとBLEを内蔵したESP32-WROOM-32を搭載し …","ref":"/docs/leaf/ap02a/","title":"AP02A ESP32 MCU"},{"body":"Leafonyの基板設計にはCADテンプレートを用いると便利です。 各CADごとの利用方法は下記をご覧ください。\nKiCad https://github.com/Leafony/cad-template\n","excerpt":"Leafonyの基板設計にはCADテンプレートを用いると便利です。 各CADごとの利用方法は下記をご覧ください。\nKiCad …","ref":"/docs/leaf/pcb_template/","title":"基板設計テンプレート"},{"body":"   特徴 Silicon Labsの技的認証済みBLEモジュールBGM11S22F256GA-V2を搭載したリーフです。MCUリーフとはUARTで接続されます。無線の認証は、CE、FCC、ISED Canada、TELEC、KC South-Korea、NCC Taiwanを取得（SLICON LABS Module Data Sheet　Revision 1.2)。\n性能    項目 内容     SoC EFR32BG1 (ARM Cortex-M4)   Bluetooth version 4.2   Frequency range 2400M ~ 2483.5MHz   Internet Security ・General Purpose CRC    ・Random Number Generator    ・Hardware Cryptographic Acceleration for AES 128/256,SHA-1, SHA-2 (SHA-224 and SHA-256) and ECC   RX sensitivity -90 dBm @ 1 Mbit/s GFSK   TX power +8dBm以下   RF certification CE, full FCC, ISED Canada, Japan and South-Korea   Flash 256KB   RAM 32KB   Interfaces UART    ドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  BLEライブラリ  BLE制御  include file （関数の概要は、仕様書に記載）  ピン配置 サンプルプロジェクト  Web Bluetooth を使ってセンサの値を表示 ※リンク先要変更  ","excerpt":"特徴 Silicon Labsの技的認証済みBLEモジュールBGM11S22F256GA-V2を搭載したリーフです。MCUリーフとはUARTで接続されます。無線の認証は、CE、FCC、ISED …","ref":"/docs/leaf/ac02a/","title":"AC02A BLE Sugar"},{"body":"Leafony規格・開発データ \rLeafony bus\r\rLeafonyで使用される基板間インターフェイスです。\n\r\r\r基板設計テンプレート\r\rPCB CAD向けテンプレートファイル\n\r \rプロセッサ \rAVR MCU\rAP01A\rATmega328Pを使用したリーフ。14個のデジタル入出力ピン（6個はPWM出力として使用可能）、6個のアナログ入力ピン、8MHz振動子、およびリセットボタンを備えています。 USB接続する場合はUSB を接続、ICSPを使用する場合はShield を接続します。 Arduino IDE使用時は、ボードをArduino Pro or Pro　Mini、プロセッサをATmega328P(3.3V,8MHz)選択。\nBasic Kit\r\r\rESP32 MCU\rAP02A\rEspressif SystemsのXtensa Dual-Core 32-bit LX6 マイクロプロセッサ、技的認証済みWi-FiとBLEを内蔵したESP32-WROOM-32を搭載した32bit MCUリーフである。 無線の認証は、 FCC、CE-RED、IC、TELEC、KCC、SRRC、NCCを取得（Espressif Systems Data Sheet V2.9）。USB電源を供給して、VBUS(5V)電源として使用可能。\nESP32 Wi-Fi Kit\r \r通信 \rBLE Sugar\rAC02A\rSilicon Labsの技的認証済みBLEモジュールBGM11S22F256GA-V2を搭載したリーフです。MCUリーフとはUARTで接続されます。無線の認証は、CE、FCC、ISED Canada、TELEC、KC South-Korea、NCC Taiwanを取得（SLICON LABS Module Data Sheet　Revision 1.2)。\nBasic Kit\r\r\rLoRa Easy\rAC03A\rEASELの技的認証済みLoRaモジュールES920LRA1を搭載したリーフです。MCUリーフとはUARTで接続されます。\n\r \rIO \r4-Sensors\rAI01A\r温湿度センサ、照度センサ、加速度センサを搭載したリーフです。MCUリーフとはI2Cで接続されます。\nBasic Kit\r\r\rSP\u0026amp;PIR\rAI02A\r圧電スピーカと人感センサを搭載したリーフです。圧電スピーカはPWM、人感センサはI2CでMCUリーフと接続されます。人感センサは接近検知アルゴリズムを内蔵しており、簡単な設定で接近を検知することが出来、接近検知時に割り込み信号を出力することが可能です。\nExtension Kit\r \rMIC\u0026amp;VR\u0026amp;LED\rAI03A\rMEMSマイク、ボリューム、LEDを搭載したリーフです。MEMSマイクとボリュームはアナログ入力ピン、LEDはデジタル出力ピンでMCUリーフと接続されます。低消費電力を実現するためI2C Expander を制御することにより電源をロードスイッチによりオフすることが可能です。\nExtension Kit\r \rLCD\rAI04A\rキャラクタLCDユニットとスイッチ2個を搭載したリーフです。LCDユニットはI2CでMCUリーフと接続される。スイッチはMCUのデジタル入力ピンとI2C ExpanderのP1ピンに接続されています。 低消費電力を実現するためI2C Expander を制御することにより電源をロードスイッチによりオフすることが可能です。\nExtension Kit\r \r電源 \rCR2032\rAV01A\rCR2032コイン電池ホルダを実装し、3Vの電池電圧を昇圧電源回路により3.3Vに変換し、3.3Vを各リーフに供給するリーフです。3.3Vをオン/オフするためのスイッチを実装しています。また、電池電圧をモニタするためのADコンバータを実装しています。\nBasic Kit\r\r\rCR2450\rAV02A\rCR2450コイン電池ホルダを実装し、3Vの電池電圧を昇圧電源回路により3.3Vに変換し、3.3Vを各リーフに供給するリーフです。3.3Vをオン/オフするためのスイッチを実装しています。また、電池電圧をモニタするためのADコンバータを実装しています。\n\r \rAA BAT\rAV03A\r単3電池ホルダを実装し、1.5Vの電池電圧を昇圧電源回路により3.3Vに変換し、3.3Vを各リーフに供給するリーフです。3.3Vをオン/オフするためのスイッチを実装しています。また、電池電圧をモニタするためのADコンバータを実装しています。\nExtension Kit\r \r2V～4.5V\rAV04A\rSHコネクタを実装し、2～4.5Vの電池電圧を昇降圧電源回路により3.3Vに変換し、3.3Vを各リーフに供給するリーフです。3.3Vをオン/オフするためのスイッチを実装しています。また、電池電圧をモニタするためのADコンバータを実装しています。 SHコネクタに接続可能な電池は乾電池2～3本またはLi-Po、Li-ION電池を想定しています。\nExtension Kit\r \r拡張 \rShield\rAX01A\rArduino Shield接続用コネクタ、SWDコネクタ、ICSPコネクタ、リーフI/F3個を実装した拡張基板です。(Connectorは1つのみ）\nExtension Kit\r\r\r29pin\rAX02A\rリーフI/Fの29ピン全てをスルーホールに接続したリーフです。\nBasic Kit\r \rLeaf x2\rAX03A\r全てのリーフI/F端子を接続したリーフを横に接続するためのリーフです。\nExtension Kit\r \rSpacer\rAX04A\r全てのリーフI/F端子を接続した高さが2mm以上ある部品を使用しているリーフの上に別のリーフを接続するためのリーフです。\nExtension Kit\r \rI Meas.\rAX05A\r3.3VおよびVBUSの消費電流を測定することが出来るリーフです。 電流測定リーフでは3.3VとVBUSは表面と裏面のパッドが電気的に切り離されているので、下記の各々スルーホールに電流計を接続することで、電池リーフから遠い部分にある単体リーフあるいは複数リーフ群の全電源電流を測定できます。下の例では、センサリーフとBLEリーフが電流測定リーフを介して、電池リーフの遠い側に配置されているので、両リーフの合計電流が測定できます。\nExtension Kit\r \rGrove\u0026amp;5V\rAX06A\rSeeed Studio製 Groveシリーズに準拠する5Vで動作するUART、I2C、アナログ入力、デジタル入力が可能なリーフです。3.3Vから昇圧電源回路により5Vに変換しGroveに供給します。Grove対応ピンの仕様は以下の通り。 低消費電力を実現するためI2C Expander を制御することにより5Vの電源をオフすることが可能です。\nExtension Kit\r \rBack to back\rAX07A\r全てのリーフI/F端子を接続したリーフを反転させて接続するためのリーフです。\nESP32 Wi-Fi Kit\r \r29pin header\rAX08A\rリーフI/Fの29ピン全てをピンヘッダに接続したリーフです。\nESP32 Wi-Fi Kit\r \rその他 \rUSB\rAZ01A\rAVR MCU へのスケッチ書き込みやシリアルモニタを使用する場合に接続するリーフです。USB-UART変換ICとしてFTDI製FT232RQを搭載しています。USBのVBUS(5V)から降圧電源回路により3.3Vに変換し、各リーフにVBUSと3.3Vを供給します。\nBasic Kit\r\r\rRTC\u0026amp;microSD\rAZ02A\rNXPのReal-Time Clock PCF8523TKおよびMicro SDカードスロットを搭載したリーフです。RTCはアラームやタイマによりMCUに割り込み信号を出力することが可能です。micro SDカードはSPIでアクセスします。\nESP32 Wi-Fi Kit\r \rConnector\rAZ61A\rLeafony Platformは、ACR (Anisotropic Conductive Rubber)を採用しています。ACRは、絶縁性シリコーンゴムに、金属又は導電性エラストマの導電部材が、狭ピッチで配列されており、圧縮されることで電気的接続が実現できます。\n\r \rConnector Cover\rAZ62A\rConnector Coverは、ACR (Anisotropic Conductive Rubber)に付着するゴミを防御することが出来ます。\n\r \rNut Plate\rAZ63A\rNut Plateは、リーフをネジで固定する時に使用します。市販の六角ナットを用いると基板の電極に触れて、ショートをおこすことがあるので要注意\n\r \rUppercase\rAZ64A\rケース（上）\nBasic Kit\r \rLowercase\rAZ65A\rケース（下）\nBasic Kit\r ","excerpt":"Leafony規格・開発データ \rLeafony bus\r\rLeafonyで使用される基板間インターフェイスです。\n\r\r\r基板設計テンプレート\r\rPCB CAD向けテンプレートファイル\n\r \rプロセッ …","ref":"/docs/leaf/","title":"リーフ資料"},{"body":"","excerpt":"","ref":"/docs/","title":"技術資料"},{"body":"概要 4-Sensorsリーフに搭載された温湿度センサ、の値を読み取って、シリアルモニタに表示するサンプルです。\n使用するリーフ 以下のリーフを使用します\n   Type Name Q\u0026rsquo;ty     AI01A 4-Sensors 1   AP01A AVR MCU 1   AZ01A USB 1   AV01A CR2032 1   AZ62A コネクタカバー 1    CR2032 コイン電池 1    M2ネジ 2    リーフの組み立て 下図を参考にリーフを組み立ててみましょう。\nソースコード Arduino IDEで下記のプログラムを書きましょう。\nソースコードのビルド 4-Sensors リーフを使うためにはライブラリのインストールが必要です。 まだインストールしていない場合はこちらのページを参考にライブラリをインストールしてください。\n","excerpt":"概要 4-Sensorsリーフに搭載された温湿度センサ、の値を読み取って、シリアルモニタに表示するサンプルです。\n使用するリーフ 以下のリーフを使用します\n   Type Name …","ref":"/docs/examples/temp_humid_sensors/","title":"温湿度センサ読み取り"},{"body":"特徴 ファイル  仕様書 回路図 レイアウト図  ピン配置 サンプルプロジェクト ソフトウェア仕様 ","excerpt":"特徴 ファイル  仕様書 回路図 レイアウト図  ピン配置 サンプルプロジェクト ソフトウェア仕様 ","ref":"/docs/leaf/ac03a/_index-2/","title":"AC03A LoRa Easy"},{"body":"概要 4-Sensorsリーフに搭載された照度センサ、の値を読み取って、シリアルモニタに表示するサンプルです。\n使用するリーフ 以下のリーフを使用します\n   Type Name Q\u0026rsquo;ty     AI01A 4-Sensors 1   AP01A AVR MCU 1   AZ01A USB 1   AV01A CR2032 1   AZ62A コネクタカバー 1    CR2032 コイン電池 1    M2ネジ 2    リーフの組み立て 下図を参考にリーフを組み立ててみましょう。\nソースコード Arduino IDEで下記のプログラムを書きましょう。\n#include \u0026lt;Wire.h\u0026gt;\r#include \u0026lt;ClosedCube_OPT3001.h\u0026gt;\r\r#define OPT3001_ADDRESS 0x45 // ADDR pin = VCC\r\rClosedCube_OPT3001 illum;\rfloat dataIllum;\rvoid setup() {\rSerial.begin(115200); // UART 115200bps\r Wire.begin(); // I2C 100KHz\r\rdelay(10);\rOPT3001_Config illumConfig;\rOPT3001_ErrorCode illumErrorConfig;\rillum.begin(OPT3001_ADDRESS);\rillumConfig.RangeNumber = B1100; // automatic full scale\r illumConfig.ConvertionTime = B1; // convertion time = 800ms\r illumConfig.ModeOfConversionOperation = B11; // continous conversion\r illumConfig.Latch = B0; // hysteresis-style\r\rillumErrorConfig = illum.writeConfig(illumConfig);\rif(illumErrorConfig != NO_ERROR){\rillumErrorConfig = illum.writeConfig(illumConfig); //retry\r }\r}\rvoid loop() {\rOPT3001 result = illum.readResult();\rif(result.error == NO_ERROR){\rdataIllum = result.lux;\r}\rSerial.println(\u0026#34;Lum[lx] = \u0026#34; + String(dataIllum));\rdelay(1000);\r}\rソースコードのビルド 4-Sensors リーフを使うためにはライブラリのインストールが必要です。 まだインストールしていない場合はこちらのページを参考にライブラリをインストールしてください。\n","excerpt":"概要 4-Sensorsリーフに搭載された照度センサ、の値を読み取って、シリアルモニタに表示するサンプルです。\n使用するリーフ 以下のリーフを使用します\n   Type Name Q\u0026rsquo;ty …","ref":"/docs/examples/illum_sensor/","title":"照度センサ読み取り"},{"body":"概要 4-Sensorsリーフに搭載された加速度センサ、の値を読み取って、シリアルモニタに表示するサンプルです。\n使用するリーフ 以下のリーフを使用します\n   Type Name Q\u0026rsquo;ty     AI01A 4-Sensors 1   AP01A AVR MCU 1   AZ01A USB 1   AV01A CR2032 1   AZ62A コネクタカバー 1    CR2032 コイン電池 1    M2ネジ 2    リーフの組み立て 下図を参考にリーフを組み立ててみましょう。\nソースコード Arduino IDEで下記のプログラムを書きましょう。\nソースコードのビルド 4-Sensors リーフを使うためにはライブラリのインストールが必要です。 まだインストールしていない場合はこちらのページを参考にライブラリをインストールしてください。\n","excerpt":"概要 4-Sensorsリーフに搭載された加速度センサ、の値を読み取って、シリアルモニタに表示するサンプルです。\n使用するリーフ 以下のリーフを使用します\n   Type Name …","ref":"/docs/examples/accelerometer/","title":"加速度センサ読み取り"},{"body":"AVR MCUリーフに搭載されたLEDを1秒ごとに点灯、消灯を繰り返します。\nここに動作のイメージ図を載せる\n使用するリーフ 以下のリーフを使用します\n   Type Name Q\u0026rsquo;ty     AP01A AVR MCU 1   AZ01A USB 1   AV01A CR2032 1   AZ62A コネクタカバー 1    CR2032 コイン電池 1    M2ネジ 2    リーフの組み立て 下図のようにリーフを組み立てましょう。\nソースコード Arduino IDEで下記のプログラムを書きましょう。\nvoid setup() {\r// LEDピンを出力ピンに設定\r pinMode(LED_BUILTIN, OUTPUT);\r}\rvoid loop() {\rdigitalWrite(LED_BUILTIN, HIGH); // LEDを点灯\r delay(1000); // 1秒待つ\r digitalWrite(LED_BUILTIN, LOW); // LEDを消灯\r delay(1000); // 1秒待つ\r}\r","excerpt":"AVR MCUリーフに搭載されたLEDを1秒ごとに点灯、消灯を繰り返します。\nここに動作のイメージ図を載せる\n使用するリーフ 以下のリーフを使用します\n   Type Name Q\u0026rsquo;ty …","ref":"/docs/examples/webbluetooth_iot/","title":"Web BluetoothをつかったIoTアプリ入門"},{"body":"   特徴 MEMSマイク、ボリューム、LEDを搭載したリーフです。MEMSマイクとボリュームはアナログ入力ピン、LEDはデジタル出力ピンでMCUリーフと接続されます。低消費電力を実現するのためI2C Expander を制御することにより電源をロードスイッチによりオフすることが可能です。\n性能    項目 内容     マイク    Type MEMS   Direction Omnidirectional   Frequency Range 100Hz ～ 10kHz   Gain 0dB   Interfaces Interfaces       ボリューム    Nominal resistance 10kΩ   Resistance law Linear law (B)   Effective electrical angle 210° (1 turn)       LED    Package Type Side-view   Emitting color Yellow    ドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ピン配置 サンプルプロジェクト  LED点滅  ","excerpt":"特徴 MEMSマイク、ボリューム、LEDを搭載したリーフです。MEMSマイクとボリュームはアナログ入力ピン、LEDはデジタル出力ピンでMCUリーフと接続されます。低消費電力を実現するのためI2C …","ref":"/docs/leaf/ai03a/","title":"AI03A MIC\u0026VR\u0026LED"},{"body":"   特徴 キャラクタLCDユニットとスイッチ2個を搭載したリーフです。LCDユニットはI2CでMCUリーフと接続されます。スイッチはMCUのデジタル入力ピンとI2C ExpanderのP1ピンに接続されています。 低消費電力化を実現するためI2C Expander を制御することにより電源をロードスイッチによりオフすることが可能です。\n性能    項目 内容     Display Format 8x2 Character   Viewing Area (WxH) 27x10.5mm   Dot Size (WxH) 0.45x0.5mm   Dot Pitch (WxH) 0.5x0.55mm   Character Size (WxH) 2.45x4.35mm   Character Pitch (WxH) 2.95x4.9mm   Viewing Direction 6:00 O\u0026rsquo;Clock   Driving Method 1/16Duty,1/5Bias   Controller IC ST7032I-0D(Sitronix) or compatible   Display Mode STN (Gray)/Positive/Reflective   Interfaces I2C    ドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ピン配置 サンプルプロジェクト  LED点滅  ","excerpt":"特徴 キャラクタLCDユニットとスイッチ2個を搭載したリーフです。LCDユニットはI2CでMCUリーフと接続されます。スイッチはMCUのデジタル入力ピンとI2C ExpanderのP1ピンに接続されて …","ref":"/docs/leaf/ai04a/","title":"AI04A LCD"},{"body":"   特徴 CR2032コイン電池ホルダを実装し、3Vの電池電圧を昇圧電源回路により3.3Vに変換し、3.3Vを各リーフに供給するリーフです。3.3Vをオン/オフするためのスイッチを実装しています。また、電池電圧をモニタするためのADコンバータを実装しています。\n性能    項目 内容     電池電圧 0.7～3.8V   出力電圧 3.3V±2%   制御方式 PWM/PFM 自動切替制御   最大出力電流 300mA @3.3V to 5V   Protection circuit 過電流制限/サーマルシャットダウン   Resolution 8bit   Reference voltage Vdd(3.3V)   Sample Rate 188.9kSPS(max)   Interfaces I2C    ドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ピン配置 サンプルプロジェクト  電池の電圧をパソコンに表示※リンク先要変更  ","excerpt":"特徴 CR2032コイン電池ホルダを実装し、3Vの電池電圧を昇圧電源回路により3.3Vに変換し、3.3Vを各リーフに供給するリーフです。3.3Vをオン/オフするためのスイッチを実装しています。また、電 …","ref":"/docs/leaf/av01a/","title":"AV01A CR2032"},{"body":"AVR MCUリーフに搭載されたLEDを1秒ごとに点灯、消灯を繰り返します。\nここに動作のイメージ図を載せる\n使用するリーフ 以下のリーフを使用します\n   Type Name Q\u0026rsquo;ty     AP01A AVR MCU 1   AZ01A USB 1   AV01A CR2032 1   AZ62A コネクタカバー 1    CR2032 コイン電池 1    M2ネジ 2    リーフの組み立て 下図のようにリーフを組み立てましょう。\nソースコード Arduino IDEで下記のプログラムを書きましょう。\nvoid setup() {\r// LEDピンを出力ピンに設定\r pinMode(LED_BUILTIN, OUTPUT);\r}\rvoid loop() {\rdigitalWrite(LED_BUILTIN, HIGH); // LEDを点灯\r delay(1000); // 1秒待つ\r digitalWrite(LED_BUILTIN, LOW); // LEDを消灯\r delay(1000); // 1秒待つ\r}\r","excerpt":"AVR MCUリーフに搭載されたLEDを1秒ごとに点灯、消灯を繰り返します。\nここに動作のイメージ図を載せる\n使用するリーフ 以下のリーフを使用します\n   Type Name Q\u0026rsquo;ty …","ref":"/docs/examples/google_sheets_iot/","title":"Google SheetsをつかったIoTサービス入門"},{"body":"Leafony bus のライセンスについて  Leafony busのアートワークの著作者は、Leafony Systems 社です。ライセンスは、 表示 4.0 国際(CC BY 4.0) で、提供されています。なお、著作権表示や無保証を参照する表示は、ありません。Leafony bus以外は、Leafony Systems社は、著作権を主張することはありません。 Leafony busのアートワークをコピーして、使用する場合は、「この製品の一部は、Leafony SystemsによるLeafony busのアートワークを利用しています。」と表示をお願いします。  Leafony bus 準拠のオリジナルリーフを制作する場合 Leafony は、Leafony Systems社の商標です。 オリジナルのリーフを作成する場合は、他のリーフとの互換性を確保するため、Leafony busの電気的・物理的仕様に合致させてください。合致させたものは、「Leafony bus 準拠」と表示して頂いても結構です。勿論、商業的にも自由に無償で使えますが、商品名称に、Leafony の名前を付けることは、Leafony Systems社の製品ラインナップと混同してしまうので、控えて下さい。\n","excerpt":"Leafony bus のライセンスについて  Leafony busのアートワークの著作者は、Leafony Systems 社です。ライセンスは、 表示 4.0 国際(CC BY 4.0) で、提 …","ref":"/docs/license/","title":"ライセンス・規約"},{"body":"   特徴 CR2450コイン電池ホルダを実装し、3Vの電池電圧を昇圧電源回路により3.3Vに変換し、3.3Vを各リーフに供給するリーフです。3.3Vをオン/オフするためのスイッチを実装しています。また、電池電圧をモニタするためのADコンバータを実装しています。\n性能　    項目 内容     電池電圧 0.7～3.8V   出力電圧 3.3V±2%   制御方式 PWM/PFM 自動切替制御   最大出力電流 300mA @3.3V to 5V   Protection circuit 過電流制限/サーマルシャットダウン   Resolution 8bit   Reference voltage Vdd(3.3V)   Sample Rate 188.9kSPS(max)   Interfaces I2C    ドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ピン配置 サンプルプロジェクト  電池の電圧をパソコンに表示※リンク先 要変更  ","excerpt":"特徴 CR2450コイン電池ホルダを実装し、3Vの電池電圧を昇圧電源回路により3.3Vに変換し、3.3Vを各リーフに供給するリーフです。3.3Vをオン/オフするためのスイッチを実装しています。また、電 …","ref":"/docs/leaf/av02a/","title":"AV02A CR2450"},{"body":"   特徴 単3電池ホルダを実装し、1.5Vの電池電圧を昇圧電源回路により3.3Vに変換し、3.3Vを各リーフに供給するリーフです。3.3Vをオン/オフするためのスイッチを実装しています。また、電池電圧をモニタするためのADコンバータを実装しています。\n性能    項目 内容     電池電圧 0.7～3.8V   出力電圧 3.3V±2%   制御方式 PWM/PFM 自動切替制御   最大出力電流 300mA @3.3V to 5V   Protection circuit 過電流制限/サーマルシャットダウン   Resolution 8bit   Reference voltage Vdd(3.3V)   Sample Rate 188.9kSPS(max)   Interfaces I2C    ドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ピン配置 サンプルプロジェクト  電池の電圧をパソコンに表示※リンク先 要変更  ","excerpt":"特徴 単3電池ホルダを実装し、1.5Vの電池電圧を昇圧電源回路により3.3Vに変換し、3.3Vを各リーフに供給するリーフです。3.3Vをオン/オフするためのスイッチを実装しています。また、電池電圧をモ …","ref":"/docs/leaf/av03a/","title":"AV03A AA BAT"},{"body":"   特徴 SHコネクタを実装し、2～4.5Vの電池電圧を昇降圧電源回路により3.3Vに変換し、3.3Vを各リーフに供給するリーフです。3.3Vをオン/オフするためのスイッチを実装しています。また、電池電圧をモニターするためのADコンバータを実装しています。 SHコネクタに接続可能な電池は乾電池2～3本またはLi-Po、Li-ION電池を想定しています。\n性能　    項目 内容     電池電圧 1.8～5.5V   出力電圧 3.3V±2%   制御方式 PWM/PFM 自動切替制御   最大出力電流 300mA (降圧時)   Protection circuit 過電流制限/サーマルシャットダウン   Resolution 8bit   Reference voltage Vdd(3.3V)   Sample Rate 188.9kSPS(max)   Interfaces I2C    ドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A_F Rev.A_B レイアウト図  Zuken /  dxf  ピン配置 サンプルプロジェクト  電池の電圧をパソコンに表示※リンク先 要変更  ","excerpt":"特徴 SHコネクタを実装し、2～4.5Vの電池電圧を昇降圧電源回路により3.3Vに変換し、3.3Vを各リーフに供給するリーフです。3.3Vをオン/オフするためのスイッチを実装しています。また、電池電圧 …","ref":"/docs/leaf/av04a/","title":"AV04A 2V～4.5V"},{"body":"   特徴 Arduino Shield接続用コネクタ、SWDコネクタ、ICSPコネクタ、リーフI/F3個を実装した拡張基板です。\nドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ピン配置 サンプルプロジェクト  LED点滅  ","excerpt":"   特徴 Arduino Shield接続用コネクタ、SWDコネクタ、ICSPコネクタ、リーフI/F3個を実装した拡張基板です。\nドキュメント  仕様書  日本語 /  English …","ref":"/docs/leaf/ax01a/","title":"AX01A Shield"},{"body":"   特徴 リーフI/Fの29ピン全てをスルーホールに接続したリーフです。。\nドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ピン配置 サンプルプロジェクト  LED点滅  ","excerpt":"   特徴 リーフI/Fの29ピン全てをスルーホールに接続したリーフです。。\nドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A …","ref":"/docs/leaf/ax02a/","title":"AX02A 29 pin"},{"body":"","excerpt":"","ref":"/docs/examples/speaker/","title":"スピーカ"},{"body":"   特徴 全てのリーフI/F端子を接続したリーフを横に接続するためのリーフです。\nドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ピン配置 サンプルプロジェクト  LED点滅  ","excerpt":"   特徴 全てのリーフI/F端子を接続したリーフを横に接続するためのリーフです。\nドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A …","ref":"/docs/leaf/ax03a/","title":"AX03A Leaf x2"},{"body":"","excerpt":"","ref":"/docs/examples/sound_level/","title":"サウンドレベルメータ"},{"body":"   特徴 全てのリーフI/F端子を接続した高さが2mm以上ある部品を使用しているリーフの上に別のリーフを接続するためのリーフです。\nドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ピン配置 サンプルプロジェクト  LED点滅  ","excerpt":"   特徴 全てのリーフI/F端子を接続した高さが2mm以上ある部品を使用しているリーフの上に別のリーフを接続するためのリーフです。\nドキュメント  仕様書  日本語 /  English …","ref":"/docs/leaf/ax04a/","title":"AX04A Spacer"},{"body":"概要 SP\u0026amp;PIR(圧電スピーカと人感センサ）に接近すると、人感センサが検知し、圧電スピーカからビープ音（メロディ）が鳴ります。 使用するリーフ 以下のリーフを使用します\n   Type Name Q\u0026rsquo;ty     AI02A SP\u0026amp;PIR 1   AP01A AVR MCU 1   AZ01A USB 1   AV01A CR2032 1   AZ62A コネクタカバー 1    CR2032 コイン電池 1    M2ネジ 2    リーフの組み立て 下図のようにリーフを組み立てましょう。\nソースコード Github\n","excerpt":"概要 SP\u0026amp;PIR(圧電スピーカと人感センサ）に接近すると、人感センサが検知し、圧電スピーカからビープ音（メロディ）が鳴ります。 使用するリーフ 以下のリーフを使用します\n   Type …","ref":"/docs/examples/ir_sensor/","title":"人感センサ"},{"body":"   特徴 3.3VおよびVBUSの消費電流を測定することが出来るリーフです。 電流測定リーフでは3.3VとVBUSは表面と裏面のパッドが電気的に切り離されているので、下記の各々スルーホールに電流計を接続することで、電池リーフから遠い部分にある単体リーフあるいは複数リーフ群の全電源電流を測定出来ます。下の例では、センサーリーフとBLEリーフが電流測定リーフを介して、電池リーフの遠い側に配置されているので、両リーフの合計電流が測定出来ます。\nドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ピン配置 サンプルプロジェクト  LED点滅  ","excerpt":"   特徴 3.3VおよびVBUSの消費電流を測定することが出来るリーフです。 電流測定リーフでは3.3VとVBUSは表面と裏面のパッドが電気的に切り離されているので、下記の各々スルーホールに電流計を …","ref":"/docs/leaf/ax05a/","title":"AX05A I Meas"},{"body":"","excerpt":"","ref":"/docs/examples/lcd/","title":"LCD"},{"body":"   特徴 Seeed Studio製 Groveシリーズに準拠する5Vで動作するUART、I2C、アナログ入力、デジタル入力が可能なリーフです。3.3Vから昇圧電源回路により5Vに変換しGroveに供給します。Grove対応ピンの仕様は以下の通り。 低消費電力を実現するためI2C Expander を制御することにより5Vの電源をオフすることが可能です。選択。\nドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ピン配置 サンプルプロジェクト  LED点滅  ","excerpt":"   特徴 Seeed Studio製 Groveシリーズに準拠する5Vで動作するUART、I2C、アナログ入力、デジタル入力が可能なリーフです。3.3Vから昇圧電源回路により5Vに変換しGroveに …","ref":"/docs/leaf/ax06a/","title":"AX06A Grove\u00265V"},{"body":"","excerpt":"","ref":"/docs/examples/rtc/","title":"リアルタイムクロック"},{"body":"  \n特徴 全てのリーフI/F端子を接続したリーフを反転させて接続するためのリーフです。\nドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ","excerpt":"  \n特徴 全てのリーフI/F端子を接続したリーフを反転させて接続するためのリーフです。\nドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイア …","ref":"/docs/leaf/ax07a/","title":"AX07A Back to back"},{"body":"","excerpt":"","ref":"/docs/examples/microsd/","title":"Micro SD"},{"body":"  \n特徴 リーフI/Fの29ピン全てをピンヘッダに接続したリーフです。\nドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ","excerpt":"  \n特徴 リーフI/Fの29ピン全てをピンヘッダに接続したリーフです。\nドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A …","ref":"/docs/leaf/ax08a/","title":"AX08A 29pin header"},{"body":"\n特徴 Leafony Platformは、ACR (Anisotropic Conductive Rubber)を採用しています。ACRは、絶縁性シリコーンゴムに、金属又は導電性エラストマの導電部材が、狭ピッチで配列されており、圧縮されることで電気的接続が実現できます。\nドキュメント  コネクタ資料  日本語 /  English  ","excerpt":"\n特徴 Leafony Platformは、ACR (Anisotropic Conductive Rubber)を採用しています。ACRは、絶縁性シリコーンゴムに、金属又は導電性エラストマの導電部材 …","ref":"/docs/leaf/az61a/","title":"AZ61A Connector"},{"body":"   特徴 AVR MCU へのスケッチ書き込みやシリアルモニタを使用する場合に接続するリーフです。USB-UART変換ICとしてFTDI製FT232RQを搭載しています。USBのVBUS(5V)から降圧電源回路により3.3Vに変換し、各リーフにVBUSと3.3Vを供給します。\n性能    項目 内容     USB USB 2.0 Full Speed    Data transfer rates 300 baud to 3 Mbaud   電源    出力電圧 3.3V±2%   制御方式　 PWM/PFM 自動切替制御   最大出力電流 500mA   Protection circuit 過電流制限/サーマルシャットダウン/短絡保護    ドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ピン配置 ","excerpt":"特徴 AVR MCU へのスケッチ書き込みやシリアルモニタを使用する場合に接続するリーフです。USB-UART変換ICとしてFTDI製FT232RQを搭載しています。USBのVBUS(5V)から降圧電 …","ref":"/docs/leaf/az01a/","title":"AZ01A USB"},{"body":"\n特徴 Connector Coverは、ACR (Anisotropic Conductive Rubber)に付着するゴミを防御することが出来ます。\nハードウェア  外形図  ","excerpt":"\n特徴 Connector Coverは、ACR (Anisotropic Conductive Rubber)に付着するゴミを防御することが出来ます。\nハードウェア  外形図  ","ref":"/docs/leaf/az62a/","title":"AZ62A Connector Cover"},{"body":"   特徴 NXPのReal-Time Clock PCF8523TKおよびMicro SDカードスロットを搭載したリーフです。RTCはアラームやタイマによりMCUに割り込み信号を出力することが可能です。micro SDカードはSPIでアクセスします。\n性能　    項目 内容     RTC    Type Real-Time Clock (RTC) and calendar   Interrupt Alarm and timer   使用水晶振動子 FC-12M 32.768000kHz 7.0 +20.0-20.0   Interfaces I2C    ドキュメント  仕様書  日本語 /  English 回路図  Rev.A 部品配置図  Rev.A レイアウト図  Zuken /  dxf  ピン配置 サンプルプロジェクト  時刻をパソコンに表示 ※リンク先要変更 microSD カードの情報をパソコンに表示 ※リンク先要変更 カメラを使って撮影した画像を microSD カードに保存 ※リンク先要変更  ","excerpt":"   特徴 NXPのReal-Time Clock PCF8523TKおよびMicro SDカードスロットを搭載したリーフです。RTCはアラームやタイマによりMCUに割り込み信号を出力することが可能で …","ref":"/docs/leaf/az02a/","title":"AZ02A RTC\u0026MicroSD"},{"body":"\n特徴 Nut Plateは、リーフをネジで固定する時に使用します。市販の六角ナットを用いると基板の電極に触れて、ショートをおこすことがあるので要注意 ※マグネット対応について記載？\nハードウェア  外形図  ","excerpt":"\n特徴 Nut Plateは、リーフをネジで固定する時に使用します。市販の六角ナットを用いると基板の電極に触れて、ショートをおこすことがあるので要注意 ※マグネット対応について記載？\nハードウェア   …","ref":"/docs/leaf/az63a/","title":"AZ63A Nut Plate"},{"body":"\n特徴 ケース（下）\n 外形図  ","excerpt":"\n特徴 ケース（下）\n 外形図  ","ref":"/docs/leaf/az65a/","title":"AZ64A Lowercase"},{"body":"\n特徴 ケース（上）\n 外形図  ","excerpt":"\n特徴 ケース（上）\n 外形図  ","ref":"/docs/leaf/az64a/","title":"AZ64A Uppercase"},{"body":"","excerpt":"","ref":"/index.json","title":""},{"body":"\r\r#td-cover-block-0 {\rbackground-image: url(/featured-background_hud28dbc58c7878fd3d577b2e424cb175f_644071_960x540_fill_q75_catmullrom_top.jpg); }\r@media only screen and (min-width: 1200px) {\r#td-cover-block-0 {\rbackground-image: url(/featured-background_hud28dbc58c7878fd3d577b2e424cb175f_644071_1920x1080_fill_q75_catmullrom_top.jpg); }\r}\r\rLeafony\rLearn More \r\rOnline Shop \r\rAn Open Source Hardware for the IoT World!\n\n\r\r\r\r\r\r\r\rLeafonyでIoTの世界を体験しましょう。\r\r\r\r\r\r\rNew chair metrics!\rThe Goldydocs UI now shows chair size metrics by default.\nPlease follow this space for updates!\n\r\r\rContributions welcome!\rWe do a Pull Request contributions workflow on GitHub. New users are always welcome!\n続きを読む …\n\r\r\r\r\r\r\rNew chair metrics!\rThe Goldydocs UI now shows chair size metrics by default.\nPlease follow this space for updates!\n\r\r\rContributions welcome!\rWe do a Pull Request contributions workflow on GitHub. New users are always welcome!\n続きを読む …\n\r\r\rFollow us on Twitter!\rFor announcement of latest features etc.\n続きを読む …\n\r\r\r\r\rThis is the second Section\r\r\r\r\r\r\r\rDownload from AppStore\rGet the Goldydocs app!\n\r\r\rContributions welcome!\rWe do a Pull Request contributions workflow on GitHub. New users are always welcome!\n続きを読む …\n\r\r\rFollow us on Twitter!\rFor announcement of latest features etc.\n続きを読む …\n\r\r\r\r\rThis is another Section\r\r\r\r\r","excerpt":"#td-cover-block-0 {\rbackground-image: …","ref":"/","title":"Leafony"},{"body":"","excerpt":"","ref":"/search/","title":"検索結果"}]