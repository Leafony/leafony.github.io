<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leafony – ESP32W-iFi Kit</title>
    <link>https://docs.leafony.com/docs/examples/advanced/2_p/esp32/</link>
    <description>Recent content in ESP32W-iFi Kit on Leafony</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docs.leafony.com/docs/examples/advanced/2_p/esp32/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: ESP32からGoogle Sheetsへのデータ転送</title>
      <link>https://docs.leafony.com/docs/examples/advanced/2_p/esp32/esp32_googlesheets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.leafony.com/docs/examples/advanced/2_p/esp32/esp32_googlesheets/</guid>
      <description>
        
        
        &lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;このサンプルアプリでは，ESP32リーフのWiFi機能を利用して，取得したセンサデータをGoogle Sheetsへ転送します。&lt;br&gt;
Google Sheets上では受け取ったセンサデータをグラフ描画します。&lt;br&gt;
これによりセンサデータを簡単に管理出来るようになります。&lt;/p&gt;
&lt;h2 id=&#34;使用するリーフ&#34;&gt;使用するリーフ&lt;/h2&gt;
&lt;p&gt;以下のリーフを使用します。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Q&amp;rsquo;ty&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/processor/ap02&#34;&gt;AP02&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/processor/ap02&#34;&gt;ESP32 MCU&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/io/ai01&#34;&gt;AI01&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/io/ai01&#34;&gt;4-Sensors&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/others/az62&#34;&gt;AZ62&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/others/az62&#34;&gt;Connector Cover &lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/others/az63&#34;&gt;AZ63&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/others/az63&#34;&gt;Nut Plate&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;M2*15mm screw&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;リーフの組み立て&#34;&gt;リーフの組み立て&lt;/h2&gt;
&lt;p&gt;ESP32と4-Sensorsリーフを重ねてねじ止めします。&lt;/p&gt;
&lt;h2 id=&#34;ソースコード&#34;&gt;ソースコード&lt;/h2&gt;
&lt;p&gt;使用するスケッチは下記のGitHubリポジトリにあります。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Leafony/Sample-Sketches/tree/master/ESP32_GoogleSheets&#34; target=&#34;_brank&#34;&gt;Leafony/Sample-Sketches/ESP32_GoogleSheets - GitHub&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;実行方法&#34;&gt;実行方法&lt;/h2&gt;
&lt;h3 id=&#34;google-sheetsの準備&#34;&gt;&lt;strong&gt;Google Sheetsの準備&lt;/strong&gt;&lt;/h3&gt;
&lt;h4 id=&#34;データ転送先google-sheetsの作成&#34;&gt;データ転送先Google Sheetsの作成&lt;/h4&gt;
&lt;img src=&#34;create_new_sheet.png&#34;&gt;
&lt;h4 id=&#34;スクリプトエディタを開く&#34;&gt;スクリプトエディタを開く&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Google Sheetsのタイトル（デフォルト：&lt;code&gt;無題のスプレッドシート&lt;/code&gt;）は自由に変更して大丈夫です。&lt;/li&gt;
&lt;li&gt;また，シート番号（デフォルト：&lt;code&gt;シート1&lt;/code&gt;）も自由に変更して大丈夫です。&lt;/li&gt;
&lt;li&gt;下のGoogle SheetsのURLの部分の赤枠で囲った記号列は，後でGoogle Sheetを指定するのに利用するので，適当な場所にコピーしておいてください。
&lt;ul&gt;
&lt;li&gt;ここでは，&lt;code&gt;1kuK8196yuY9n37fLHc2ScT7OJUFTyGkiyY9nIuYmNGY&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;open_script_editor.png&#34;&gt;
&lt;h4 id=&#34;スクリプトの記述&#34;&gt;スクリプトの記述&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Githubのソースコードをコピー&amp;amp;ペーストしてください。
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Leafony/Sample-Sketches/tree/master/ESP32_GoogleSheets/google_scripts_code.js&#34; target=&#34;_brank&#34;&gt;Leafony/Sample-Sketches/ESP32_GoogleSheets/google_scripts_code.js - GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;以下の変数に，先ほど作成した&lt;code&gt;Google Sheet&lt;/code&gt;の情報を入力してください。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;id&lt;/code&gt;：先ほどコピーした&lt;code&gt;Google Sheets&lt;/code&gt;のURLの記号列&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sheetName&lt;/code&gt;：書き込み先のシート名（デフォルト：&lt;code&gt;シート1&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;この&lt;code&gt;Google Script&lt;/code&gt;にアクセスする際に，URL欄に赤枠で囲った記号列は後で&lt;code&gt;Arduino&lt;/code&gt;側で設定するために必要なので，適当にコピーしておいてください。
&lt;ul&gt;
&lt;li&gt;ここでは，&lt;code&gt;106DTVFa_tWzVoOts1NExNyDrA9_6ruz_CzW2stjhvSfnFvqoYncgSAN&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;edit_script.png&#34;&gt;
&lt;h4 id=&#34;スクリプトのデプロイ&#34;&gt;スクリプトのデプロイ&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;公開&lt;/code&gt;-&amp;gt;&lt;code&gt;ウェブアプリケーションとして導入&lt;/code&gt;をクリックします。&lt;/p&gt;
&lt;img src=&#34;deploy_app_1.png&#34;&gt;
&lt;p&gt;続いて開いたウィンドウで，ESP32から簡単にアクセス出来るように権限を&lt;code&gt;Anyone, even anonymous&lt;/code&gt;に変更します。&lt;/p&gt;
&lt;img src=&#34;deploy_app_2.png&#34; width=300&gt;
&lt;p&gt;&lt;code&gt;デプロイ&lt;/code&gt;ボタンを押すと，&lt;code&gt;Script App&lt;/code&gt;から&lt;code&gt;Google Sheets&lt;/code&gt;へのアクセス権限の確認が行なわれるので，適切に許可してください。&lt;br&gt;
&lt;strong&gt;以上でGoogle Sheets側の設定は完了です。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;スクリプトを修正して再デプロイ&#34;&gt;スクリプトを修正して再デプロイ&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;公開&lt;/code&gt;-&amp;gt;&lt;code&gt;ウェブアプリケーションとして導入&lt;/code&gt;をクリックします。&lt;/li&gt;
&lt;li&gt;最初と全く同じ設定でデプロイすると修正したコードがうまく反映されないことがあるので，再デプロイのときは&lt;code&gt;Project version&lt;/code&gt;を&lt;code&gt;New&lt;/code&gt;に設定して&lt;code&gt;更新&lt;/code&gt;をクリックします。&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;deploy_again.png&#34; width=300&gt;
&lt;h3 id=&#34;google-sheetsの動作確認&#34;&gt;Google Sheetsの動作確認&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ブラウザから先ほどコピーした&lt;code&gt;Google Script&lt;/code&gt;の記号列を使ってアクセスすると&lt;code&gt;Spread Sheet&lt;/code&gt;にデータが書き込まれます&lt;/li&gt;
&lt;li&gt;今回は試しに&lt;code&gt;111&lt;/code&gt;, &lt;code&gt;222&lt;/code&gt;, &lt;code&gt;333&lt;/code&gt;のデータを書き込んでみます&lt;/li&gt;
&lt;li&gt;ここでは先ほど確認した&lt;code&gt;Google Script&lt;/code&gt;の&lt;code&gt;key&lt;/code&gt;が&lt;code&gt;106DTVFa_tWzVoOts1NExNyDrA9_6ruz_CzW2stjhvSfnFvqoYncgSAN&lt;/code&gt;だったので，以下のURLにアクセスすることでデータの書き込みが出来ます。
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://script.google.com/macros/s/106DTVFa_tWzVoOts1NExNyDrA9_6ruz_CzW2stjhvSfnFvqoYncgSAN/exec?temperature=111&amp;amp;humidity=222&amp;amp;brightness=333&#34;&gt;https://script.google.com/macros/s/106DTVFa_tWzVoOts1NExNyDrA9_6ruz_CzW2stjhvSfnFvqoYncgSAN/exec?temperature=111&amp;amp;humidity=222&amp;amp;brightness=333&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Spread Sheet&lt;/code&gt;に以下のようにデータが書き込まれていれば成功です。&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;check_script_app.png&#34;&gt;
&lt;h3 id=&#34;arduinoの準備&#34;&gt;&lt;strong&gt;Arduinoの準備&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Githubのソースコードの以下の箇条書きの内容に注意して修正し，&lt;code&gt;ESP32リーフ&lt;/code&gt;に書き込んで下さい。 
- &lt;a href=&#34;https://github.com/Leafony/Sample-Sketches/tree/master/ESP32_GoogleSheets/ESP32_GoogleSheets.ino&#34; target=&#34;_brank&#34;&gt;Leafony/Sample-Sketches/ESP32_GoogleSheets/google_scripts_code.js - GitHub&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;アクセスする&lt;code&gt;WiFi&lt;/code&gt;の情報を以下の定数に代入してください。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;const char* SSID = &amp;quot;wifi_ssid&amp;quot;;    // WiFi SSID
const char* PASSWORD = &amp;quot;wifi_password&amp;quot;;  // WiFi Password
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;先ほど作成した&lt;code&gt;Google Script&lt;/code&gt;の情報を以下の定数に代入してください。
&lt;ul&gt;
&lt;li&gt;例：const char* KEY = &lt;code&gt;106DTVFa_tWzVoOts1NExNyDrA9_6ruz_CzW2stjhvSfnFvqoYncgSAN&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;const char* KEY = &amp;quot;google_scripts_key&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;センサデータの書き込みの時間間隔を調整したいときは以下の定数に代入してください。
&lt;ul&gt;
&lt;li&gt;単位は秒です&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;uint64_t DEEP_SLEEP_TIME_SEC = 60;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;実行結果&#34;&gt;実行結果&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Arduino&lt;/code&gt;を実行して，逐次センサデータがGoogle Sheetsに書き込まれます。&lt;/li&gt;
&lt;li&gt;お好みで&lt;code&gt;Google Sheets&lt;/code&gt;に新しいシートを追加して，センサデータをグラフ描画も簡単に実装出来ます。&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;results_1.png&#34;&gt;
&lt;img src=&#34;results_2.png&#34;&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Wi-Fi タッチセンサ</title>
      <link>https://docs.leafony.com/docs/examples/advanced/2_p/esp32/wifi_touchsensor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.leafony.com/docs/examples/advanced/2_p/esp32/wifi_touchsensor/</guid>
      <description>
        
        
        &lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;工場出荷時に、ESP32 MCUリーフにArduinoのスケッチが書き込まれているので、スマートフォンやパソコンのWi-Fiを使ってタッチセンサの値を送信して、表示がされます。&lt;/p&gt;
&lt;h2 id=&#34;使用するリーフ&#34;&gt;使用するリーフ&lt;/h2&gt;
&lt;p&gt;以下のリーフを使用します。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Q&amp;rsquo;ty&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/processor/ap02&#34;&gt;AP02&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/processor/ap02&#34;&gt;ESP32 MCU&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/power/av04&#34;&gt;AV04&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/power/av04&#34;&gt;2V~4.5V&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/extension/ax07&#34;&gt;AX07&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/extension/ax07&#34;&gt;Back to back&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/extension/ax08&#34;&gt;AX08&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/extension/ax08&#34;&gt;29pin header&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/others/az62&#34;&gt;AZ62&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/others/az62&#34;&gt;Connector Cover &lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/others/az63&#34;&gt;AZ63&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/others/az63&#34;&gt;Nut Plate&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AAA battery holder&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AAA battery&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;M2*15mm screw&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;φ10x2mm magnet&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;リーフの組み立て&#34;&gt;リーフの組み立て&lt;/h2&gt;
&lt;p&gt;下図のようにリーフを組み立てましょう。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./ESPWiFi_assemble.png&#34; alt=&#34;assemble1&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ピンアサイン&#34;&gt;ピンアサイン&lt;/h2&gt;
&lt;p&gt;各リーフのピンアサインは下図を参考&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.leafony.com/docs/getting-started/pinassign/esp32_wi-fi_kit_pinassign.jpg&#34;&gt;&lt;img src=&#34;https://docs.leafony.com/docs/getting-started/pinassign/esp32_wi-fi_kit_pinassign.jpg&#34; width=&#34;600&#34;&gt;&lt;/img&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ソースコード&#34;&gt;ソースコード&lt;/h2&gt;
&lt;p&gt;使用するスケッチは下記のGitHubリポジトリにあります。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Leafony/Sample-Sketches/tree/master/ESP32_AP_Touch&#34; target=&#34;_brank&#34;&gt;Leafony/Sample-Sketches/ESP32_AP_Touch - GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;実行方法&#34;&gt;実行方法&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;単4電池ボックスに電池を挿入し、ESP32リーフの電源スイッチを入れる&lt;/li&gt;
&lt;li&gt;PCまたはスマートフォンで下記のWi-Fiに接続する
&lt;ul&gt;
&lt;li&gt;SSID: Leafony_ESP32-AP&lt;/li&gt;
&lt;li&gt;Password: password&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PCまたはスマートフォンでWebブラウザを起動し、&lt;a href=&#34;http://192.168.4.1&#34;&gt;http://192.168.4.1&lt;/a&gt;にアクセス&lt;/li&gt;
&lt;li&gt;29pin headerの7、9、22、24、26、28ピンがタッチセンサに割り当てられています。&lt;br&gt;
ピンに触れると静電容量が減るため、値が減少します。値が閾値20以下になると”Touch detected”と表示されます。&lt;br&gt;
(24ピンはRTC&amp;amp;microSDと干渉しているため、サンプルスケッチでは非表示にしています。検出閾値は、スケッチで変更可能です。以下の写真では、指先で26ピンに触れています。)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;Wi-FiTouch-Sensor-Test_1-300x222.png&#34; alt=&#34;Wi-FiTouch-Sensor-Test_1-300x222.png&#34;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;26ピンに触れていると、以下のようにブラウザの表示が変化します。　&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;Wi-FiTouch-Sensor-Test_2.png&#34; alt=&#34;Wi-FiTouch-Sensor-Test_2.png&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
