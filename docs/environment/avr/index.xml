<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leafony – AVR MCU 開発環境設定マニュアル</title>
    <link>https://docs.leafony.com/docs/environment/avr/</link>
    <description>Recent content in AVR MCU 開発環境設定マニュアル on Leafony</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://docs.leafony.com/docs/environment/avr/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Arduino IDE の設定</title>
      <link>https://docs.leafony.com/docs/environment/avr/arduino/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.leafony.com/docs/environment/avr/arduino/</guid>
      <description>
        
        
        &lt;h2 id=&#34;用意するもの&#34;&gt;用意するもの&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Basic Kit&lt;/li&gt;
&lt;li&gt;USBケーブル(データ転送用)&lt;/li&gt;
&lt;li&gt;パソコン (Windows、Mac OS X 、または Linux)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;arduino-ideのインストール&#34;&gt;Arduino IDEのインストール&lt;/h2&gt;
&lt;p&gt;以下の手順で、Arduino IDEをインストールを行います。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.arduino.cc/&#34; target=&#34;_blank&#34;&gt;Arduinoのホームページ&lt;/a&gt; 
から&lt;code&gt;SOFTWARE&lt;/code&gt;のページを開きます。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Download&lt;/code&gt;で、インストーラをダウンロードします。&lt;/li&gt;
&lt;li&gt;画面の指示に従って、インストールします。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;previous-ide-インストール&#34;&gt;Previous IDE インストール&lt;/h3&gt;
&lt;p&gt;下記より、Previous IDEのインストールが出来ます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.arduino.cc/en/Main/OldSoftwareReleases#previous&#34;&gt;Previous IDE Releases&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;パソコンと接続&#34;&gt;パソコンと接続&lt;/h2&gt;
&lt;p&gt;USBケーブルでパソコンを接続します。&lt;br&gt;&lt;/p&gt;
&lt;img src=&#34;./basic_assemble.png&#34; width=&#34;530&#34;&gt;
&lt;br&gt;&lt;br&gt;
&lt;h2 id=&#34;マイコンボードの設定&#34;&gt;マイコンボードの設定&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Arduino AVR Boards&lt;/code&gt;は、IDEと一緒にインストールされます。&lt;code&gt;Arduino AVR Boards&lt;/code&gt; のバージョンは、&lt;code&gt;ツール→ボード→ボードマネージャ&lt;/code&gt; で確認をすることが出来ます。&lt;code&gt;バージョンを選択&lt;/code&gt;をすれば、以前のものをインストールすることが出来ます。&lt;br&gt;&lt;br&gt;
&lt;img src=&#34;./ardunoide_boardmanager.jpg&#34; width=&#34;640&#34;&gt;&lt;/img&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ツール → ボード&lt;/code&gt;から、&lt;code&gt;Arduino Pro or Pro Mini&lt;/code&gt;を選択、&lt;code&gt;プロセッサ&lt;/code&gt;で&lt;code&gt;ATmega328P (3.3V,8MHz)&lt;/code&gt;を選択します。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img src=&#34;./IDE_ATmega.jpg&#34; width=&#34;640&#34;&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;code&gt;ツール → シリアルポート&lt;/code&gt;から、Leafonyが接続されているシリアルポートを選択します。シリアルポートが選択出来ない場合は、&lt;a href=&#34;https://docs.leafony.com/docs/getting-started/solution/#シリアルポートが見つからない&#34; target=&#34;_blank&#34;&gt;シリアルポートが見つからない&lt;/a&gt;を参照して下さい。&lt;/br&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;./IDE_COM.jpg&#34; width=&#34;640&#34;&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h2 id=&#34;マイコンボードの動作確認&#34;&gt;マイコンボードの動作確認&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Arduino IDEを起動し、&lt;code&gt;ファイル → スケッチ例 → 01.Basics → Blink&lt;/code&gt;をクリックし、サンプルアプリを開きます。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;マイコンボードに書き込む&lt;/code&gt;ボタンを押すをAVR MCUリーフにプログラムが書き込まれます。&lt;/li&gt;
&lt;li&gt;AVR MCUリーフに搭載されたLEDが点滅していることが確認できれば完了です。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;スケッチのピンの指定&#34;&gt;スケッチのピンの指定&lt;/h3&gt;
&lt;p&gt;ピンは、名前(Name)で指定して下さい。&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.leafony.com/docs/leaf/processor/ap01/ap01_pinassign.png&#34;&gt;&lt;img src=&#34;https://docs.leafony.com/docs/leaf/processor/ap01/ap01_pinassign.png&#34; width=&#34;750&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ライブラリのインストール&#34;&gt;ライブラリのインストール&lt;/h2&gt;
&lt;p&gt;プログラムを書き込むには、ライブラリのインストールが必要なリーフがあります。下記の手順を参考に、あらかじめ全てののライブラリをインストールしておきます。&lt;/p&gt;
&lt;h3 id=&#34;1-使用するライブラリ&#34;&gt;1. 使用するライブラリ&lt;/h3&gt;
&lt;p&gt;各Kitで使用するライブラリは以下の通りです。&lt;/p&gt;
&lt;table class=&#34;table-hover&#34;&gt;
  &lt;thread&gt;
    &lt;tr&gt;
      &lt;th&gt;Item&lt;/th&gt;
      &lt;th&gt;include file&lt;/th&gt;
      &lt;th&gt;Tags&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thread&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;BLE&lt;/td&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/Leafony/TBGLib&#34; target=&#34;_blank&#34;&gt;TBGLib.h&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;Bluetoothライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td rowspan=6&gt;4-Sensors&lt;/td&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit_Sensor&#34; target=&#34;_blank&#34;&gt;Adafruit_Sensor.h&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;ユニファイドセンサドライバ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit_BusIO&#34; target=&#34;_blank&#34;&gt;Adafruit_BusIO_Register.h&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;Bus IOライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/ameltech/sme-hts221-library&#34; target=&#34;_blank&#34;&gt;HTS221.h&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;温湿度センサライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit_HTS221&#34; target=&#34;_blank&#34;&gt;Adafruit_HTS221.h&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;Adafruit温湿度センサライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/closedcube/ClosedCube_OPT3001_Arduino&#34; target=&#34;_blank&#34;&gt;ClosedCube_OPT3001.h&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;照度センサライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit_LIS3DH/tree/1.1.2&#34; target=&#34;_blank&#34;&gt;Adafruit_LIS3DH.h&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;1.1.2&lt;/td&gt;
      &lt;td&gt;加速度センサライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LCD&lt;/td&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/tomozh/arduino_ST7032&#34; target=&#34;_blank&#34;&gt;ST7032.h&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;LCDライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;AVR MCU&lt;/td&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/PaulStoffregen/MsTimer2&#34; target=&#34;_blank&#34;&gt;MsTimer2.h&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;タイマ割り込みライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RTC&amp;MicroSD&lt;/td&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/adafruit/RTClib&#34; target=&#34;_blank&#34;&gt;RTClib.h&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;RTCライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td rowspan=2&gt;STM32 MCU&lt;/td&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/stm32duino/STM32RTC/tree/1.2.0&#34; target=&#34;_blank&#34;&gt;STM32RTC.h&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;1.2.0&lt;/td&gt;
      &lt;td&gt;STM32RTCライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/stm32duino/STM32LowPower&#34; target=&#34;_blank&#34;&gt;STM32LowPower.h&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;STM32LowPowerライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LTE-M&lt;/td&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/Leafony/LteLeafV4&#34; target=&#34;_blank&#34;&gt;LteLeafV4.h&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;LTE-Mライブラリ&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;2-ライブラリをダウンロード&#34;&gt;2. ライブラリをダウンロード&lt;/h3&gt;
&lt;p&gt;上記表のリンクをクリックすると、ライブラリのGitHubリポジトリにアクセスします。&lt;code&gt;Code → Download ZIP&lt;/code&gt;をクリックし、ライブラリをダウンロードします。&lt;/p&gt;
&lt;img src=&#34;github_1.png&#34; width=&#34;600&#34;&gt;
&lt;h3 id=&#34;3-ライブラリをインクルード&#34;&gt;3. ライブラリをインクルード&lt;/h3&gt;
&lt;p&gt;Arduinoを立ち上げ、&lt;code&gt;スケッチ → ライブラリをインクルード → ZIP形式のライブラリをインストール&lt;/code&gt;の順に選択して、先程ダウンロードしたZIPファイルを読み込みます。&lt;/p&gt;
&lt;img src=&#34;IDE_libinclude.png&#34; width=&#34;640&#34;&gt;  
&lt;h2 id=&#34;困ったときには&#34;&gt;困ったときには&lt;/h2&gt;
&lt;p&gt;お問い合わせをする前に、&lt;a href=&#34;https://docs.leafony.com/docs/getting-started/solution&#34; target=&#34;_blank&#34;&gt;困ったときには&lt;/a&gt;を読んでみてください。&lt;/p&gt;
&lt;p style=&#34;text-align: right&#34;&gt;
&lt;A HREF=&#34;javascript:history.back()&#34;&gt;前のページに戻る&lt;/A&gt;
&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: 旧バージョンArduino IDE</title>
      <link>https://docs.leafony.com/docs/environment/avr/arduino_ver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.leafony.com/docs/environment/avr/arduino_ver/</guid>
      <description>
        
        
        &lt;h2 id=&#34;旧バージョンのarduino-ide-インストール方法&#34;&gt;旧バージョンのArduino IDE インストール方法&lt;/h2&gt;
&lt;p&gt;Arduino IDE のバージョンによって、動作しないことがあります。その場合、動作検証済みのバージョンを使います。下記より、旧バージョンをダウンロードすることができます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.arduino.cc/en/Main/OldSoftwareReleases#previous&#34;&gt;Previous IDE Releases&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;arduino-avr-boardsの確認と変更&#34;&gt;Arduino AVR Boardsの確認と変更&lt;/h2&gt;
&lt;p&gt;通常はインストールした Arduino IDE のバージョンに対応するバージョンの Arduino AVR Boards がインストールされますが、環境により異なるバージョンの Arduino AVR Boards が指定されている場合があります。
そのため Arduino IDE の&lt;code&gt;ツール→ボード→ボードマネージャ&lt;/code&gt; を開いて Arduino AVR Boards のバージョンを確認してください。
&lt;img src=&#34;./ardunoide_boards.jpg&#34;&gt;&lt;/img&gt;&lt;/p&gt;
&lt;p&gt;もし想定と異なるバージョンの場合は&lt;code&gt;バージョンの選択&lt;/code&gt;から必要なバージョンを選択して&lt;code&gt;インストール&lt;/code&gt;してください。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./ardunoide_boardmanager.jpg&#34;&gt;&lt;/img&gt;&lt;/p&gt;
&lt;p style=&#34;text-align: right&#34;&gt;
&lt;A HREF=&#34;javascript:history.back()&#34;&gt;前のページに戻る&lt;/A&gt;
&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: PlatformIO IDE for VSCodeの設定</title>
      <link>https://docs.leafony.com/docs/environment/avr/platformio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.leafony.com/docs/environment/avr/platformio/</guid>
      <description>
        
        
        &lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;Visual Studio Code (VSCode)は、Microsoft社が提供する軽量ながら強力なソース コード エディターで、デスクトップ上で実行され、Windows、macOS、および Linux で使用できます。PlatformIO IDEは、VSCodeの拡張機能で、ビルドが早く、ライブラリやボードのバージョンがプロジェクト毎に管理されているのが特長です。
&lt;/br&gt;&lt;/p&gt;
&lt;h2 id=&#34;用意するもの&#34;&gt;用意するもの&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Basic Kit 2 または、ESP32 Wi-Fi Kit 2&lt;/br&gt;&lt;/li&gt;
&lt;li&gt;パソコン (Windows、Mac OS X 、または Linux)&lt;/br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;事前準備&#34;&gt;事前準備&lt;/h2&gt;
&lt;h3 id=&#34;pythonのインストール&#34;&gt;Pythonのインストール&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;PlatformIO IDEを動かすには、Pythonが必要です。&lt;a href=&#34;https://www.javadrive.jp/python/install/index1.html#section2&#34;&gt;こちら&lt;/a&gt;を参照して、Pythonインストールして下さい。&lt;/br&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;platformio-ideのインストール&#34;&gt;PlatformIO IDEのインストール&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;PlatformIO IDEは、VSCodeの拡張機能なので、まず、&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;VSCode&lt;/a&gt;をインストールして下さい。&lt;/br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;拡張機能&lt;/code&gt;(画面左のバー)をクリックします。&lt;/br&gt;&lt;/li&gt;
&lt;li&gt;検索窓が現れたら、&lt;code&gt;Japanese Language Pack for Visual Studio Code&lt;/code&gt;を入力し、日本語の拡張機能をインストールします。&lt;/br&gt;&lt;/li&gt;
&lt;li&gt;次に &lt;code&gt;platformio ide&lt;/code&gt;を入力し、PlatformIO IDEをインストールが出来れば、事前準備は完了です。&lt;/br&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;クイックスタート&#34;&gt;クイックスタート&lt;/h2&gt;
&lt;p&gt;「Hello Wolrd」の事例で、platformIO IDEの使い方を紹介します。&lt;/br&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;VSCodeを立ち上げ、&lt;code&gt;ファイル&lt;/code&gt;→ &lt;code&gt;新しいウィンドウ&lt;/code&gt;を開きます。&lt;/br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;PlatformIO&lt;/code&gt;(画面左のバー)をクリックし、PLATFORMIO QUICK ACCESS（画面左）を表示させます。&lt;/br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;PIO Home/Open&lt;/code&gt;をクリックします。&lt;/br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;New Project&lt;/code&gt;をクリックすると、Project Wizardが表示されます。&lt;code&gt;Name&lt;/code&gt;、&lt;code&gt;Boad&lt;/code&gt;、&lt;code&gt;Framework&lt;/code&gt;を以下の通り入力して、&lt;code&gt;Finish&lt;/code&gt;をクリックします。新しいBoardを選択した時、プログラミングに必要なファイルのダウンロードするために数分かかります。&lt;/br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name:&lt;code&gt;Hellow_Wolrd_Pjt&lt;/code&gt;と記入 &lt;/br&gt;&lt;/li&gt;
&lt;li&gt;Board:&lt;code&gt;Espressif ESP32 Dev Module&lt;/code&gt;を選択 &lt;/br&gt;&lt;/li&gt;
&lt;li&gt;Framework:&lt;code&gt;Arduino &lt;/code&gt;を選択 &lt;/br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;platformio.ini&lt;/code&gt; (画面左）を開き、 Projectで定義したBoardとFrameworkが、正しく定義されていることを確認します。&lt;/br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;env&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pro8MHzatmega328&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;platform&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;atmelavr&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;board&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;pro8MHzatmega328&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;framework&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;arduino&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;AVR MCUは、アップロード時に、COMポートの自動検出をするため、COMポートの番号の指定が不要になります。また、シリアル通信のボーレートを&lt;code&gt;monitor_speed =&lt;/code&gt;で定義します。以下を参考に、platformio.iniに加えて下さい。&lt;/br&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;monitor_speed&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;115200&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;&lt;code&gt;src/main.cpp&lt;/code&gt;(画面左）を開き、以下のコードを貼り付けて下さい。&lt;/br&gt;
PlatformIO IDEのコードは、Arduino IDEのスケッチの先頭に&lt;code&gt;#include &amp;lt;Arduino.h&amp;gt;&lt;/code&gt;を加えます。&lt;/br&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;Arduino.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;setup&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;Serial&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;begin&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;115200&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;delay&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;loop&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(){&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;Serial&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color:#000&#34;&gt;delay&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1000&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;ソースコード：&lt;a href=&#34;https://github.com/Leafony/platformio-sample-projects/tree/main/avr/Hello_Wold_Pjt&#34;&gt;Hello_Wold.Pjt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;
&lt;p&gt;PlatformIO ツールバー(画面下のバー)の&lt;code&gt;Project environment switcher&lt;/code&gt;ボタンを押すと、アクティブなプロジェクが画面上側に全て表示されます。実行しないプロジェクトを削除してから&lt;code&gt;Build&lt;/code&gt;ボタンを押して下さい。&lt;/br&gt;&lt;/br&gt;
&lt;img src=&#34;./platformio_6.png&#34; width=&#34;640&#34;&gt;&lt;/br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LeafonyをPCに接続し、&lt;code&gt;Upload&lt;/code&gt;ボタンを押すと、プログラムがMCUに書き込まれます。&lt;/br&gt;
LeafonyをPCに接続の仕方は、&lt;a href=&#34;https://docs.leafony.com/docs/environment/avr/arduino/#%E3%83%91%E3%82%BD%E3%82%B3%E3%83%B3%E3%81%A8%E6%8E%A5%E7%B6%9A&#34;&gt;こちら&lt;/a&gt; を参照願います。&lt;/br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PlatformIO ツールバー(画面下のバー)の&lt;code&gt;Serial Monitor&lt;/code&gt;ボタンを押して、起動させます。次に、MCUリーフの&lt;code&gt;リセットスイッチ&lt;/code&gt;を押すと、プログラムが実行され、&lt;code&gt;Hello Wolrd&lt;/code&gt;が表示されます。&lt;/br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;詳しい使い方&#34;&gt;詳しい使い方&lt;/h1&gt;
&lt;h2 id=&#34;mcuとboardとの関係&#34;&gt;MCUとBoardとの関係&lt;/h2&gt;
&lt;p&gt;LeafonyのMCUとPlatformIO IDEのBoardとの関係は、以下の様になります。&lt;/br&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Type&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Item&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Platform&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Board&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Upload&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;AP01&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../leaf/processor/ap01&#34;&gt;AVR MCU&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;atmelavr&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Arduino Pro or Pro Mini ATmega328(3.3v,8Mhz)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;COMポートの自動検出&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;AP02&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../leaf/processor/ap02&#34;&gt;ESP32 MCU&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Espressif 32&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Espressif ESP32 Dev Module&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;COMポートの自動検出&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;AP03&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;../../leaf/processor/ap03&#34;&gt;STM32 MCU&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ststm32&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;LEAFONY_AP03&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;COMポートの自動検出が出来ない。&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;プロジェクトフォルダの名前変更や削除&#34;&gt;プロジェクトフォルダの名前変更や削除&lt;/h2&gt;
&lt;p&gt;Project Wizarで、New Projectを立ち上げると、フォルダが作成され、デフォルトでは、~/Documents/PlatformIO/Projects に保存されます。
Projectの名前変更やフォルダの削除は、Project Wizarではなく、エクスプローラから直接出来ます。&lt;/br&gt;&lt;/p&gt;
&lt;h2 id=&#34;プロジェクトフォルダの保存場所の設定&#34;&gt;プロジェクトフォルダの保存場所の設定&lt;/h2&gt;
&lt;p&gt;プロジェクトフォルダの保存場所の設定は、Project Wizarではなく、ターミナルから行います。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;VSCodeを立ち上げ、&lt;code&gt;ファイル&lt;/code&gt;→ &lt;code&gt;新しいウィンドウ&lt;/code&gt;を開きます。&lt;/br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;PlatformIO&lt;/code&gt;(画面左のバー)をクリックし、PLATFORMIO QUICK ACCESS（画面左）を表示させます。&lt;/br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;PIO Home/Open&lt;/code&gt;をクリックします。&lt;/br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以下のコードを実行します。&lt;/br&gt;
　&lt;code&gt;pio settings set projects_dir ＜設定したい(絶対)パス＞&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VSCodeを再起動します。&lt;/br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;ライブラリ&#34;&gt;ライブラリ&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;インストールの仕方&lt;/br&gt;
ライブラリは、platformio.ini の最後の行に、&lt;code&gt;lib_deps =&lt;/code&gt;で定義すれば、PCにインストールされます。定義の仕方は、GitHubのURLを直接指定する方法と&lt;code&gt;Libraries&lt;/code&gt;で指定する方法の二通りがあります。
&lt;/br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各リーフのライブラリ一覧は、以下の通りです。&lt;/br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;table class=&#34;table-hover&#34;&gt;
  &lt;thread&gt;
    &lt;tr&gt;
      &lt;th&gt;Item&lt;/th&gt;
      &lt;th&gt;lib_deps&lt;/th&gt;
      &lt;th&gt;Tags&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thread&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;BLE&lt;/td&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/Leafony/TBGLib&#34; target=&#34;_blank&#34;&gt;https://github.com/Leafony/TBGLib&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;Bluetoothライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td rowspan=6&gt;4-Sensors&lt;/td&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit_Sensor&#34; target=&#34;_blank&#34;&gt;adafruit/Adafruit Unified Sensor@^1.1.6&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;ユニファイドセンサドライバ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit_BusIO&#34; target=&#34;_blank&#34;&gt;adafruit/Adafruit BusIO@^1.14.1&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;Bus IOライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/ameltech/sme-hts221-library&#34; target=&#34;_blank&#34;&gt;https://github.com/ameltech/sme-hts221-library&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;温湿度センサライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit_HTS221&#34; target=&#34;_blank&#34;&gt;adafruit/Adafruit HTS221@^0.1.2&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;Adafruit温湿度センサライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/closedcube/ClosedCube_OPT3001_Arduino&#34; target=&#34;_blank&#34;&gt;closedcube/ClosedCube OPT3001@^1.1.2&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;照度センサライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/adafruit/Adafruit_LIS3DH/tree/1.1.2&#34; target=&#34;_blank&#34;&gt;adafruit/Adafruit LIS3DH@^1.1.2&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;1.1.2&lt;/td&gt;
      &lt;td&gt;加速度センサライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LCD&lt;/td&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/tomozh/arduino_ST7032&#34; target=&#34;_blank&#34;&gt;tomozh/ST7032@0.0.0-alpha+sha.501bf64fe6&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;LCDライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;AVR MCU&lt;/td&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/PaulStoffregen/MsTimer2&#34; target=&#34;_blank&#34;&gt;paulstoffregen/MsTimer2@^1.1&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;タイマ割り込みライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RTC&amp;MicroSD&lt;/td&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/adafruit/RTClib&#34; target=&#34;_blank&#34;&gt;adafruit/RTClib@^2.1.1&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;RTCライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td rowspan=2&gt;STM32 MCU&lt;/td&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/stm32duino/STM32RTC/tree/1.2.0&#34; target=&#34;_blank&#34;&gt;stm32duino/STM32duino RTC @ 1.2.0&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;1.2.0&lt;/td&gt;
      &lt;td&gt;STM32RTCライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/stm32duino/STM32LowPower&#34; target=&#34;_blank&#34;&gt;stm32duino/STM32duino Low Power@^1.2.2&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;STM32LowPowerライブラリ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LTE-M&lt;/td&gt;
      &lt;td&gt;&lt;a href=&#34;https://github.com/Leafony/LteLeafV4&#34; target=&#34;_blank&#34;&gt;Lhttps://github.com/Leafony/LteLeafV4&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;LTE-Mライブラリ&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.platformio.org/en/latest/integration/ide/vscode.html#ide-vscode&#34; target=&#34;_blank&#34;&gt;PlatformIO ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&#34;text-align: right&#34;&gt;
&lt;A HREF=&#34;javascript:history.back()&#34;&gt;前のページに戻る&lt;/A&gt;
&lt;/p&gt;
      </description>
    </item>
    
  </channel>
</rss>
